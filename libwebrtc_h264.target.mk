# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := libwebrtc_h264
DEFS_Debug := '-DWEBRTC_SVNREVISION="Unavailable(issue687)"' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DNO_TCMALLOC' \
	'-DDISABLE_NACL' \
	'-DCHROMIUM_BUILD' \
	'-DUSE_PROPRIETARY_CODECS' \
	'-DENABLE_GPU=1' \
	'-DUSE_OPENSSL=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DUSE_SKIA=1' \
	'-DWEBRTC_LINUX' \
	'-DWEBRTC_ANDROID' \
	'-DWEBRTC_ARCH_ARM' \
	'-DWEBRTC_DETECT_ARM_NEON' \
	'-DWEBRTC_CLOCK_TYPE_REALTIME' \
	'-DWEBRTC_THREAD_RR' \
	'-DWEBRTC_VIDEO' \
	'-DWEBRTC_ANDROID_OPENSLES' \
	'-D__STDC_FORMAT_MACROS' \
	'-DANDROID' \
	'-D__GNU_SOURCE=1' \
	'-DUSE_STLPORT=1' \
	'-D_STLP_USE_PTR_SPECIALIZATIONS=1' \
	'-DHAVE_OFF64_T' \
	'-DHAVE_SYS_UIO_H' \
	'-DANDROID_BINSIZE_HACK' \
	'-DANDROID_UPSTREAM_BRINGUP=1' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=1' \
	'-DWTF_USE_DYNAMIC_ANNOTATIONS=1' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := -fno-exceptions \
	-fno-strict-aliasing \
	-Wall \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-Wextra \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-mthumb \
	-march=armv7-a \
	-mtune=cortex-a8 \
	-mfloat-abi=softfp \
	-mfpu=vfpv3-d16 \
	-fno-tree-sra \
	-Wno-psabi \
	-mthumb-interwork \
	-U__linux__ \
	-ffunction-sections \
	-funwind-tables \
	-g \
	-fstack-protector \
	-fno-short-enums \
	-finline-limit=64 \
	-Wa,--noexecstack \
	-Wno-error=non-virtual-dtor \
	-I/home/android-ndk-r7b//platforms/android-9/arch-arm/usr/include \
	-I/home/android-ndk-r7b//sources/cxx-stl/stlport/stlport \
	-O0 \
	-g \
	-fno-omit-frame-pointer \
	-mlong-calls \
	-marm

# Flags passed to only C files.
CFLAGS_C_Debug := 

# Flags passed to only C++ files.
CFLAGS_CC_Debug := -fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden \
	-Wsign-compare \
	-Woverloaded-virtual \
	-Wno-abi

INCS_Debug := -Isrc \
	-I. \
	-Isrc/modules/video_coding/codecs/h264/include \
	-Isrc/system_wrappers/interface \
	-Ithird_party/libvpx/source/libvpx \
	-Isrc/common_video/interface \
	-Isrc/modules/video_coding/codecs/interface \
	-Isrc/modules/interface \
	-Ithird_party/libx264/common \
	-Ithird_party/libx264/encoder \
	-Ithird_party/libx264/extras \
	-Ithird_party/libx264 \
	-Ithird_party/libx264/common/arm \
	-Ithird_party/libh264dec/libh264dec \
	-Ithird_party/libh264dec/libh264dec/arm

DEFS_Release := '-DWEBRTC_SVNREVISION="Unavailable(issue687)"' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DNO_TCMALLOC' \
	'-DDISABLE_NACL' \
	'-DCHROMIUM_BUILD' \
	'-DUSE_PROPRIETARY_CODECS' \
	'-DENABLE_GPU=1' \
	'-DUSE_OPENSSL=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DUSE_SKIA=1' \
	'-DWEBRTC_LINUX' \
	'-DWEBRTC_ANDROID' \
	'-DWEBRTC_ARCH_ARM' \
	'-DWEBRTC_DETECT_ARM_NEON' \
	'-DWEBRTC_CLOCK_TYPE_REALTIME' \
	'-DWEBRTC_THREAD_RR' \
	'-DWEBRTC_VIDEO' \
	'-DWEBRTC_ANDROID_OPENSLES' \
	'-D__STDC_FORMAT_MACROS' \
	'-DANDROID' \
	'-D__GNU_SOURCE=1' \
	'-DUSE_STLPORT=1' \
	'-D_STLP_USE_PTR_SPECIALIZATIONS=1' \
	'-DHAVE_OFF64_T' \
	'-DHAVE_SYS_UIO_H' \
	'-DANDROID_BINSIZE_HACK' \
	'-DANDROID_UPSTREAM_BRINGUP=1' \
	'-DNDEBUG' \
	'-DNVALGRIND' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=0'

# Flags passed to all source files.
CFLAGS_Release := -fno-exceptions \
	-fno-strict-aliasing \
	-Wall \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-Wextra \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-mthumb \
	-march=armv7-a \
	-mtune=cortex-a8 \
	-mfloat-abi=softfp \
	-mfpu=vfpv3-d16 \
	-fno-tree-sra \
	-Wno-psabi \
	-mthumb-interwork \
	-U__linux__ \
	-ffunction-sections \
	-funwind-tables \
	-g \
	-fstack-protector \
	-fno-short-enums \
	-finline-limit=64 \
	-Wa,--noexecstack \
	-Wno-error=non-virtual-dtor \
	-I/home/android-ndk-r7b//platforms/android-9/arch-arm/usr/include \
	-I/home/android-ndk-r7b//sources/cxx-stl/stlport/stlport \
	-Os \
	-fno-ident \
	-fdata-sections \
	-ffunction-sections \
	-fomit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release := 

# Flags passed to only C++ files.
CFLAGS_CC_Release := -fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden \
	-Wsign-compare \
	-Woverloaded-virtual \
	-Wno-abi

INCS_Release := -Isrc \
	-I. \
	-Isrc/modules/video_coding/codecs/h264/include \
	-Isrc/system_wrappers/interface \
	-Ithird_party/libvpx/source/libvpx \
	-Isrc/common_video/interface \
	-Isrc/modules/video_coding/codecs/interface \
	-Isrc/modules/interface \
	-Ithird_party/libx264/common \
	-Ithird_party/libx264/encoder \
	-Ithird_party/libx264/extras \
	-Ithird_party/libx264 \
	-Ithird_party/libx264/common/arm \
	-Ithird_party/libh264dec/libh264dec \
	-Ithird_party/libh264dec/libh264dec/arm

OBJS := $(obj).target/$(TARGET)/src/modules/video_coding/codecs/h264/reference_picture_selection.o \
	$(obj).target/$(TARGET)/src/modules/video_coding/codecs/h264/h264.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := -Wl,-z,noexecstack \
	-fPIC \
	-nostdlib \
	-Wl,--no-undefined \
	-Wl,--exclude-libs=ALL \
	--sysroot=/home/android-ndk-r7b//platforms/android-9/arch-arm \
	-Wl,--icf=safe \
	-L/home/android-ndk-r7b//sources/cxx-stl/stlport/libs/armeabi-v7a

LDFLAGS_Release := -Wl,-z,noexecstack \
	-fPIC \
	-nostdlib \
	-Wl,--no-undefined \
	-Wl,--exclude-libs=ALL \
	--sysroot=/home/android-ndk-r7b//platforms/android-9/arch-arm \
	-Wl,--icf=safe \
	-L/home/android-ndk-r7b//sources/cxx-stl/stlport/libs/armeabi-v7a \
	-Wl,-O1 \
	-Wl,--as-needed \
	-Wl,--gc-sections

LIBS :=  \
	-lstlport_static \
	/home/android-ndk-r7b//toolchains/arm-linux-androideabi-4.4.3/prebuilt//linux-x86/bin//../lib/gcc/arm-linux-androideabi/4.4.3/libgcc.a \
	-lc \
	-ldl \
	-lstdc++ \
	-lm \
	-llog

$(obj).target/src/modules/video_coding/codecs/h264/libwebrtc_h264.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/src/modules/video_coding/codecs/h264/libwebrtc_h264.a: LIBS := $(LIBS)
$(obj).target/src/modules/video_coding/codecs/h264/libwebrtc_h264.a: TOOLSET := $(TOOLSET)
$(obj).target/src/modules/video_coding/codecs/h264/libwebrtc_h264.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink)

all_deps += $(obj).target/src/modules/video_coding/codecs/h264/libwebrtc_h264.a
# Add target alias
.PHONY: libwebrtc_h264
libwebrtc_h264: $(obj).target/src/modules/video_coding/codecs/h264/libwebrtc_h264.a

# Add target alias to "all" target.
.PHONY: all
all: libwebrtc_h264

